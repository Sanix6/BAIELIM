# Generated by Django 5.0.4 on 2024-04-16 10:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес')),
                ('phoneNumber', models.CharField(blank=True, max_length=200, null=True, verbose_name='Номер телефона')),
                ('photo', models.TextField(blank=True, null=True, verbose_name='Аватар')),
                ('user_type', models.CharField(choices=[('manager', 'Менеджер'), ('administrator', 'Администратор'), ('agent', 'Агент'), ('store', 'Магазин'), ('driver', 'Водитель')], default='administrator', max_length=50, verbose_name='Тип пользователя')),
                ('login', models.CharField(max_length=200, unique=True, verbose_name='Логин')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('reset_code', models.CharField(blank=True, max_length=6, verbose_name='Код для сброса пароля')),
                ('passport_front', models.TextField(blank=True, null=True, verbose_name='Паспорт фронтальная сторона')),
                ('passport_back', models.TextField(verbose_name='Паспорт обратная сторона')),
                ('balance', models.FloatField(default=0, verbose_name='Баланс')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('contactName', models.CharField(blank=True, max_length=200, null=True, verbose_name='Контактное имя')),
            ],
            options={
                'verbose_name': 'Водитель',
                'verbose_name_plural': 'Водители',
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fullname', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО')),
            ],
            options={
                'verbose_name': 'Менеджер',
                'verbose_name_plural': 'Менеджеры',
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='ModelAdmin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fullname', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('costTypes', models.ManyToManyField(blank=True, to='category.costtype', verbose_name='Типы продаж')),
            ],
            options={
                'verbose_name': 'Агент',
                'verbose_name_plural': 'Агенты',
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('contactName', models.CharField(max_length=200, verbose_name='Контактное имя')),
                ('phoneNumber1', models.CharField(blank=True, max_length=200, verbose_name='Контактный номер 1')),
                ('phoneNumber2', models.CharField(blank=True, max_length=200, verbose_name='Контактный номер 2')),
                ('phoneNumber3', models.CharField(blank=True, max_length=200, verbose_name='Контактный номер 3')),
                ('score', models.FloatField(default=0, verbose_name='Cчет')),
                ('lat', models.FloatField(default=0, verbose_name='LAT')),
                ('lon', models.FloatField(default=0, verbose_name='LON')),
                ('costType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='category.costtype')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
            },
            bases=('user.user',),
        ),
    ]
